{"version":3,"sources":["Components/AppHeader/AppHeader.js","Components/Layout/Link1/Link1.js","Components/Layout/Home/Home.js","Components/Routes.js","Components/AppTitleBar/AppTitleBar.js","Components/AppFooter/AppFooter.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","class","Link1","props","linkNumber","match","params","Home","RouterOutlet","path","component","exact","render","key","AppTitleBar","href","AppFooter","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0PAEaA,G,YAAY,WACvB,OACE,yBAAKC,MAAM,cACT,iD,eCHOC,EAAQ,SAAAC,GAAU,IAGrBC,EAFWD,EAAME,MAAjBC,OAEAF,WACR,OACE,6BACE,2DAAiCA,GADnC,4nFCLSG,EAAO,WAClB,OACE,6BACE,qFADF,mcAQY,IACV,6GAGK,IAZP,o1DCCSC,EAAe,WAC1B,OACE,oCACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWH,EAAMI,OAAK,IACtC,kBAAC,IAAD,CACEF,KAAK,wBACLG,OAAQ,SAAAT,GAAK,OACX,kBAAC,EAAD,eAAOU,IAAKV,EAAME,MAAMC,OAAOF,YAAc,IAAQD,KAEvDQ,OAAK,MCVAG,EAAc,WACzB,OACE,yBAAKb,MAAM,aACT,yBAAKA,MAAM,UACT,uBAAGc,KAAK,KAAR,QACA,uBAAGA,KAAK,eAAR,UACA,uBAAGA,KAAK,eAAR,aCRKC,EAAY,WACvB,OAAO,gDCqBMC,MAjBf,WACE,OACE,yBAAKhB,MAAM,iBACT,kBAAC,EAAD,MAEA,kBAAC,EAAD,MAEA,yBAAKA,MAAM,QACT,kBAAC,EAAD,OAEF,yBAAKA,MAAM,cACT,kBAAC,EAAD,SCNYiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2D,WCXNiB,IAASV,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFW,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.2d4d03f2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const AppHeader = () => {\r\n  return (\r\n    <div class=\"app-header\">\r\n      <h1>This is Header</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Link1 = props => {\r\n  const { params } = props.match;\r\n\r\n  const { linkNumber } = params;\r\n  return (\r\n    <div>\r\n      <h3>Showing contents for Link : {linkNumber}</h3>\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sit amet\r\n      feugiat magna, ut suscipit purus. Aenean rutrum velit ultricies augue\r\n      porttitor auctor. Ut id lacus sit amet lacus eleifend ornare fringilla ut\r\n      est. Morbi iaculis nulla non fermentum venenatis. Aenean nisl felis,\r\n      molestie id justo nec, pulvinar condimentum est. Sed at nulla sed tellus\r\n      volutpat venenatis id at eros. Integer leo quam, ultricies nec velit sed,\r\n      porttitor bibendum sem. Mauris sodales in enim ultricies iaculis.\r\n      Suspendisse placerat tincidunt erat, sed vulputate lectus suscipit et.\r\n      Mauris fermentum nulla quis leo euismod vulputate. Aliquam laoreet tempus\r\n      ante et gravida. Suspendisse dapibus, erat eget rutrum gravida, lorem urna\r\n      porttitor magna, nec ultrices sapien tellus sit amet eros. Pellentesque\r\n      eget nibh et nisi auctor maximus. Mauris efficitur velit id neque\r\n      consectetur pellentesque. Nullam fringilla lorem sapien, vitae pretium\r\n      felis pharetra eu. Sed sollicitudin metus nec pulvinar mollis.\r\n      Pellentesque euismod ornare dapibus. Vestibulum ante ipsum primis in\r\n      faucibus orci luctus et ultrices posuere cubilia Curae; Nullam dictum\r\n      venenatis maximus. Nulla tempus nunc felis, sed eleifend lectus bibendum\r\n      ac. Quisque vitae diam ut diam malesuada volutpat in sit amet mauris. In\r\n      hac habitasse platea dictumst. Fusce auctor ipsum non enim tincidunt\r\n      suscipit. Cras eget enim non arcu dignissim auctor. Suspendisse iaculis\r\n      turpis urna, nec ornare tellus fringilla quis. Nullam feugiat suscipit\r\n      augue sit amet blandit. Quisque volutpat sem ut elit egestas varius.\r\n      Integer rhoncus consectetur erat eu auctor. Orci varius natoque penatibus\r\n      et magnis dis parturient montes, nascetur ridiculus mus. Pellentesque\r\n      habitant morbi tristique senectus et netus et malesuada fames ac turpis\r\n      egestas. Cras pharetra lorem et elit tempor, ac varius urna ullamcorper.\r\n      Donec magna metus, tempus at tortor in, porttitor malesuada odio. Donec\r\n      hendrerit quam id enim pellentesque, quis vulputate ante hendrerit. Nulla\r\n      facilisi. Maecenas consequat tristique orci. Vivamus sit amet tincidunt\r\n      elit. Ut sit amet cursus turpis, sed sollicitudin arcu. Vivamus mollis\r\n      libero sit amet arcu luctus, nec condimentum diam mattis. Morbi mauris\r\n      urna, feugiat non accumsan eget, convallis vel velit. Nam lacinia lectus\r\n      id justo viverra, vitae tincidunt enim placerat. Cras dictum blandit\r\n      ligula in mattis. Maecenas odio dui, placerat ornare gravida a, accumsan\r\n      ac sem. Mauris aliquam vitae turpis id tempor. Praesent nulla justo,\r\n      pretium et nunc ut, suscipit sollicitudin mauris. Pellentesque ut est\r\n      metus. Nullam id lectus in elit sollicitudin convallis. Nam id pharetra\r\n      justo. Duis viverra auctor elit non ultricies.\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <div>\r\n      <b>The standard Lorem Ipsum passage, used since the 1500s</b> \"Lorem ipsum\r\n      dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\r\n      incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis\r\n      nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n      consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\r\n      cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat\r\n      non proident, sunt in culpa qui officia deserunt mollit anim id est\r\n      laborum.\"{' '}\r\n      <b>\r\n        Section 1.10.32 of \"de Finibus Bonorum et Malorum\", written by Cicero in\r\n        45 BC\r\n      </b>{' '}\r\n      \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem\r\n      accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab\r\n      illo inventore veritatis et quasi architecto beatae vitae dicta sunt\r\n      explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut\r\n      odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\r\n      voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum\r\n      quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam\r\n      eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat\r\n      voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam\r\n      corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur?\r\n      Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam\r\n      nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas\r\n      nulla pariatur?\" 1914 translation by H. Rackham \"But I must explain to you\r\n      how all this mistaken idea of denouncing pleasure and praising pain was\r\n      born and I will give you a complete account of the system, and expound the\r\n      actual teachings of the great explorer of the truth, the master-builder of\r\n      human happiness. No one rejects, dislikes, or avoids pleasure itself,\r\n      because it is pleasure, but because those who do not know how to pursue\r\n      pleasure rationally encounter consequences that are extremely painful. Nor\r\n      again is there anyone who loves or pursues or desires to obtain pain of\r\n      itself, because it is pain, but because occasionally circumstances occur\r\n      in which toil and pain can procure him some great pleasure. To take a\r\n      trivial example, which of us ever undertakes laborious physical exercise,\r\n      except to obtain some advantage from it? But who has any right to find\r\n      fault with a man who chooses to enjoy a pleasure that has no annoying\r\n      consequences, or one who avoids a pain that produces no resultant\r\n      pleasure?\"\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Link1 from './Layout/Link1';\r\nimport { Home } from './Layout/Home/Home';\r\n\r\nexport const RouterOutlet = () => {\r\n  return (\r\n    <>\r\n      <Route path=\"/\" component={Home} exact />\r\n      <Route\r\n        path=\"/viewLink/:linkNumber\"\r\n        render={props => (\r\n          <Link1 key={props.match.params.linkNumber || ''} {...props} />\r\n        )}\r\n        exact\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './AppTitleBar.css';\r\nimport { RouterOutlet } from '../Routes';\r\n\r\nexport const AppTitleBar = () => {\r\n  return (\r\n    <div class=\"app-title\">\r\n      <div class=\"topnav\">\r\n        <a href=\"/\">Home</a>\r\n        <a href=\"/viewLink/1\">Link 1</a>\r\n        <a href=\"/viewLink/2\">Link 2</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const AppFooter = () => {\r\n  return <div>This is footer</div>;\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport AppHeader from './Components/AppHeader';\nimport { AppTitleBar } from './Components/AppTitleBar/AppTitleBar';\nimport AppFooter from './Components/AppFooter';\nimport { RouterOutlet } from './Components/Routes';\n\nfunction App() {\n  return (\n    <div class=\"app-container\">\n      <AppHeader />\n\n      <AppTitleBar />\n\n      <div class=\"main\">\n        <RouterOutlet />\n      </div>\n      <div class=\"app-footer\">\n        <AppFooter />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}